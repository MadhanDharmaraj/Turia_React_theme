{"version":3,"sources":["views/pages/authentication/Login.js","../node_modules/reactstrap/es/Alert.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","_ref","name","role","_jsxs","Fragment","children","_jsx","className","Avatar","size","color","icon","Coffee","Login","props","_jsx2","_useSkin","useSkin","_useSkin2","_slicedToArray","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","_useState","useState","_useState2","email","setEmail","_useState3","_useState4","password","setPassword","_useForm","useForm","register","errors","handleSubmit","illustration","source","require","concat","default","Row","Link","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","Col","lg","sm","src","alt","md","CardTitle","tag","CardText","Alert","HelpCircle","top","right","UncontrolledTooltip","target","placement","Form","onSubmit","data","isObjEmpty","useJwt","login","then","res","_objectSpread","userData","accessToken","refreshToken","handleLogin","update","push","getHomeRouteForLoggedInUser","toast","success","fullName","username","transition","Slide","hideProgressBar","autoClose","catch","err","console","log","FormGroup","Label","for","Input","autoFocus","type","value","placeholder","onChange","classnames","innerRef","required","validate","InputPasswordToggle","_defineProperty","CustomInput","label","Button","Ripple","block","Facebook","Twitter","Mail","GitHub","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","i","arguments","length","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","propTypes","PropTypes","node","string","closeClassName","closeAriaLabel","cssModule","fade","bool","isOpen","toggle","func","tagPropType","shape","Fade","oneOfType","defaultProps","unmountOnExit","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","_objectWithoutProperties","_excluded","inputVisibility","setInputVisibility","InputGroup","InputGroupAddon","addonType","InputGroupText","Eye","EyeOff","renderIcon"],"mappings":"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","file":"static/js/157.5b2874b7.chunk.js","sourcesContent":["import { useState, useContext, Fragment } from 'react'\nimport classnames from 'classnames'\nimport Avatar from '@components/avatar'\nimport { useSkin } from '@hooks/useSkin'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { toast, Slide } from 'react-toastify'\nimport { handleLogin } from '@store/actions/auth'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport { Link, useHistory } from 'react-router-dom'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee } from 'react-feather'\nimport {\n  Alert,\n  Row,\n  Col,\n  CardTitle,\n  CardText,\n  Form,\n  Input,\n  FormGroup,\n  Label,\n  CustomInput,\n  Button,\n  UncontrolledTooltip\n} from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\n\nconst ToastContent = ({ name, role }) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\n      </div>\n    </div>\n    <div className='toastify-body'>\n      <span>You have successfully logged in as an {role} user to Vuexy. Now you can start to explore. Enjoy!</span>\n    </div>\n  </Fragment>\n)\n\nconst Login = props => {\n  const [skin, setSkin] = useSkin()\n  const ability = useContext(AbilityContext)\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const [email, setEmail] = useState('admin@demo.com')\n  const [password, setPassword] = useState('admin')\n\n  const { register, errors, handleSubmit } = useForm()\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const onSubmit = data => {\n    if (isObjEmpty(errors)) {\n      useJwt\n        .login({ email, password })\n        .then(res => {\n          const data = { ...res.data.userData, accessToken: res.data.accessToken, refreshToken: res.data.refreshToken }\n          dispatch(handleLogin(data))\n          ability.update(res.data.userData.ability)\n          history.push(getHomeRouteForLoggedInUser(data.role))\n          toast.success(\n            <ToastContent name={data.fullName || data.username || 'John Doe'} role={data.role || 'admin'} />,\n            { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n          )\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n          <svg viewBox='0 0 139 95' version='1.1' height='28'>\n            <defs>\n              <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\n                <stop stopColor='#000000' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n              <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\n                <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\n                <stop stopColor='#FFFFFF' offset='100%'></stop>\n              </linearGradient>\n            </defs>\n            <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n              <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\n                <g id='Group' transform='translate(400.000000, 178.000000)'>\n                  <path\n                    d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\n                    id='Path'\n                    className='text-primary'\n                    style={{ fill: 'currentColor' }}\n                  ></path>\n                  <path\n                    d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\n                    id='Path'\n                    fill='url(#linearGradient-1)'\n                    opacity='0.2'\n                  ></path>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.049999997'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\n                  ></polygon>\n                  <polygon\n                    id='Path-2'\n                    fill='#000000'\n                    opacity='0.099999994'\n                    points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\n                  ></polygon>\n                  <polygon\n                    id='Path-3'\n                    fill='url(#linearGradient-2)'\n                    opacity='0.099999994'\n                    points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\n                  ></polygon>\n                </g>\n              </g>\n            </g>\n          </svg>\n          <h2 className='brand-text text-primary ml-1'>Vuexy</h2>\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Welcome to Vuexy! 👋\n            </CardTitle>\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\n            <Alert color='primary'>\n              <div className='alert-body font-small-2'>\n                <p>\n                  <small className='mr-50'>\n                    <span className='font-weight-bold'>Admin:</span> admin@demo.com | admin\n                  </small>\n                </p>\n                <p>\n                  <small className='mr-50'>\n                    <span className='font-weight-bold'>Client:</span> client@demo.com | client\n                  </small>\n                </p>\n              </div>\n              <HelpCircle\n                id='login-tip'\n                className='position-absolute'\n                size={18}\n                style={{ top: '10px', right: '10px' }}\n              />\n              <UncontrolledTooltip target='login-tip' placement='left'>\n                This is just for ACL demo purpose.\n              </UncontrolledTooltip>\n            </Alert>\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='login-email'>\n                  Email\n                </Label>\n                <Input\n                  autoFocus\n                  type='email'\n                  value={email}\n                  id='login-email'\n                  name='login-email'\n                  placeholder='john@example.com'\n                  onChange={e => setEmail(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <div className='d-flex justify-content-between'>\n                  <Label className='form-label' for='login-password'>\n                    Password\n                  </Label>\n                  <Link to='/forgot-password'>\n                    <small>Forgot Password?</small>\n                  </Link>\n                </div>\n                <InputPasswordToggle\n                  value={password}\n                  id='login-password'\n                  name='login-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput type='checkbox' className='custom-control-Primary' id='remember-me' label='Remember Me' />\n              </FormGroup>\n              <Button.Ripple type='submit' color='primary' block>\n                Sign in\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>New on our platform?</span>\n              <Link to='/register'>\n                <span>Create an account</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button.Ripple color='facebook'>\n                <Facebook size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='twitter'>\n                <Twitter size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='google'>\n                <Mail size={14} />\n              </Button.Ripple>\n              <Button.Ripple className='mr-0' color='github'>\n                <GitHub size={14} />\n              </Button.Ripple>\n            </div>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Login\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread(_objectSpread({}, Fade.defaultProps), {}, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread(_objectSpread(_objectSpread({}, Fade.defaultProps), transition), {}, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return /*#__PURE__*/React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}
{"version":3,"sources":["../../src/FileSaver.js","views/extensions/import-export/Export.js","@core/components/extensions-header/index.js"],"names":["b","a","autoBom","console","warn","test","type","Blob","c","d","e","XMLHttpRequest","open","responseType","onload","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","saveAs","HTMLAnchorElement","prototype","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","initialData","id","username","email","website","Export","tableRef","useRef","_useState","useState","data","_slicedToArray","_useState3","_useState4","filteredData","setFilteredData","_useState5","_useState6","value","setValue","_useState7","_useState8","modal","setModal","_useState9","_useState10","fileName","setFileName","_useState11","_useState12","fileFormat","setFileFormat","toggleModal","renderTableData","map","col","_jsxs","children","_jsx","Fragment","ExtensionsHeader","subTitle","link","Row","className","Col","sm","Card","CardBody","Button","Ripple","color","onClick","Label","for","Input","bsSize","onChange","dataArr","length","filter","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleFilter","Table","innerRef","responsive","Modal","isOpen","toggle","onClosed","ModalHeader","ModalBody","FormGroup","placeholder","CustomInput","ModalFooter","bookType","wb","XLSX","utils","table_to_book","current","sheet","wbout","write","bookSST","file","concat","FileSaver","s","buf","ArrayBuffer","view","Uint8Array","charCodeAt","s2ab","handleExport","props"],"mappings":"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","file":"static/js/136.9aba8d50.chunk.js","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import { Fragment, useState, useRef } from 'react'\nimport ExtensionsHeader from '@components/extensions-header'\nimport XLSX from 'xlsx'\nimport * as FileSaver from 'file-saver'\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Table,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  FormGroup,\n  CustomInput,\n  Label\n} from 'reactstrap'\n\nconst initialData = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    website: 'hildegard.org'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    website: 'anastasia.net'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    website: 'ramiro.info'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    website: 'kale.biz'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    website: 'demarco.info'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    website: 'ola.org'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    website: 'elvis.io'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    website: 'jacynthe.com'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    website: 'conrad.com'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    website: 'ambrose.net'\n  }\n]\n\nconst Export = () => {\n  const tableRef = useRef()\n\n  const [data] = useState(initialData)\n  const [filteredData, setFilteredData] = useState([])\n  const [value, setValue] = useState('')\n  const [modal, setModal] = useState(false)\n  const [fileName, setFileName] = useState('')\n  const [fileFormat, setFileFormat] = useState('xlsx')\n\n  const toggleModal = () => {\n    setModal(!modal)\n  }\n\n  const handleFilter = e => {\n    const dataArr = data\n    let filteredData = []\n    const value = e.target.value\n    setValue(value)\n    if (value.length) {\n      filteredData = dataArr.filter(col => {\n        const startsWithCondition =\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\n\n        const includesCondition =\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\n\n        if (startsWithCondition) return startsWithCondition\n        else if (!startsWithCondition && includesCondition) return includesCondition\n        else return null\n      })\n      setFilteredData(filteredData)\n      setValue(value)\n    }\n  }\n\n  const handleExport = () => {\n    toggleModal()\n    const bookType = fileFormat\n    const wb = XLSX.utils.table_to_book(tableRef.current, { sheet: 'Sheet JS' })\n    const wbout = XLSX.write(wb, { bookType, bookSST: true, type: 'binary' })\n\n    const s2ab = s => {\n      const buf = new ArrayBuffer(s.length)\n      const view = new Uint8Array(buf)\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\n      return buf\n    }\n    const file = fileName.length ? `${fileName}.${fileFormat}` : `excel-sheet.${fileFormat}`\n\n    return FileSaver.saveAs(new Blob([s2ab(wbout)], { type: 'application/octet-stream' }), file)\n  }\n\n  const array = value ? filteredData : data\n  const renderTableData = array.map(col => {\n    return (\n      <tr key={col.id}>\n        <td>{col.email}</td>\n        <td>{col.name}</td>\n        <td>{col.website}</td>\n        <td>{col.id}</td>\n      </tr>\n    )\n  })\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='XLSX'\n        subTitle='Xlsx is a parser and writer for various spreadsheet formats'\n        link='https://github.com/AdeleD/react-paginate'\n      />\n      <Row className='export-component'>\n        <Col sm='12'>\n          <Card>\n            <CardBody className='pb-0'>\n              <div className='d-flex justify-content-between flex-wrap flex-sm-row flex-column'>\n                <Button.Ripple color='primary' onClick={() => toggleModal()}>\n                  Export\n                </Button.Ripple>\n                <div className='d-flex align-items-center justify-content-end mt-sm-0 mt-1'>\n                  <Label for='search-input' className='mr-1'>\n                    Search\n                  </Label>\n                  <Input id='search-input' bsSize='sm' type='text' value={value} onChange={e => handleFilter(e)} />\n                </div>\n              </div>\n            </CardBody>\n            <Table innerRef={tableRef} className='table-hover-animation mt-2' responsive>\n              <thead>\n                <tr>\n                  <th>Email</th>\n                  <th>Name</th>\n                  <th>Website</th>\n                  <th>Rank</th>\n                </tr>\n              </thead>\n              <tbody>{renderTableData}</tbody>\n            </Table>\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={modal}\n        toggle={() => toggleModal()}\n        className='modal-dialog-centered'\n        onClosed={() => setFileName('')}\n      >\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Input\n              type='text'\n              value={fileName}\n              onChange={e => setFileName(e.target.value)}\n              placeholder='Enter File Name'\n            />\n          </FormGroup>\n          <FormGroup>\n            <CustomInput\n              type='select'\n              id='selectFileFormat'\n              name='customSelect'\n              value={fileFormat}\n              onChange={e => setFileFormat(e.target.value)}\n            >\n              <option>xlsx</option>\n              <option>csv</option>\n              <option>txt</option>\n            </CustomInput>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={() => handleExport()}>\n            Export\n          </Button>\n          <Button color='flat-danger' onClick={() => toggleModal()}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Export\n","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}
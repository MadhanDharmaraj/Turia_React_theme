{"version":3,"sources":["views/forms/form-repeater/RepeatingForm.js","views/forms/form-repeater/RepeatingFormAnimated.js","views/forms/form-repeater/index.js","@core/components/breadcrumbs/index.js","@core/components/repeater/index.js"],"names":["RepeatingForm","_useState","useState","_useState2","_slicedToArray","count","setCount","deleteForm","e","preventDefault","target","closest","remove","_jsxs","Card","children","_jsx","CardHeader","className","CardBody","Repeater","i","Form","Row","Col","md","FormGroup","Label","for","concat","Input","type","id","placeholder","value","readOnly","disabled","Button","Ripple","color","onClick","outline","X","size","sm","Plus","slideDownWrapper","form","CardText","href","rel","Tag","SlideDown","FormRepeater","Fragment","Breadcrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","RepeatingFormAnimated","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","Breadcrumb","BreadcrumbItem","tag","Link","to","active","UncontrolledButtonDropdown","DropdownToggle","Grid","DropdownMenu","right","DropdownItem","CheckSquare","MessageSquare","Mail","Calendar","component","rest","_objectWithoutProperties","_excluded","items","push","_objectSpread","defaultProps"],"mappings":"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","file":"static/js/156.78ad14c8.chunk.js","sourcesContent":["import { useState } from 'react'\nimport Repeater from '@components/repeater'\nimport { Row, Col, Card, CardHeader, CardBody, Form, FormGroup, Label, Input, Button } from 'reactstrap'\nimport { X, Plus } from 'react-feather'\n\nconst RepeatingForm = () => {\n  const [count, setCount] = useState(1)\n\n  const increaseCount = () => {\n    setCount(count + 1)\n  }\n\n  const deleteForm = e => {\n    e.preventDefault()\n    e.target.closest('form').remove()\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <h4 className='card-title'>Repeating Forms</h4>\n      </CardHeader>\n\n      <CardBody>\n        <Repeater count={count}>\n          {i => (\n            <Form key={i}>\n              <Row className='justify-content-between align-items-center'>\n                <Col md={4}>\n                  <FormGroup>\n                    <Label for={`item-name-${i}`}>Item Name</Label>\n                    <Input type='text' id={`item-name-${i}`} placeholder='Vuexy Admin Template' />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for={`cost-${i}`}>Cost</Label>\n                    <Input type='number' id={`cost-${i}`} placeholder='32' />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for={`quantity-${i}`}>Quantity</Label>\n                    <Input type='number' id={`quantity-${i}`} placeholder='1' />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <FormGroup>\n                    <Label for={`price-${i}`}>Price</Label>\n                    <input\n                      className='form-control-plaintext'\n                      type='number'\n                      id={`price-${i}`}\n                      value='$32'\n                      placeholder='$32'\n                      readOnly\n                      disabled\n                    />\n                  </FormGroup>\n                </Col>\n                <Col md={2}>\n                  <Button.Ripple color='danger' className='text-nowrap px-1' onClick={deleteForm} outline>\n                    <X size={14} className='mr-50' />\n                    <span>Delete</span>\n                  </Button.Ripple>\n                </Col>\n                <Col sm={12}>\n                  <hr />\n                </Col>\n              </Row>\n            </Form>\n          )}\n        </Repeater>\n        <Button.Ripple className='btn-icon' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RepeatingForm\n","import { useState } from 'react'\nimport Repeater from '@components/repeater'\nimport { X, Plus } from 'react-feather'\nimport { SlideDown } from 'react-slidedown'\nimport { Row, Col, Card, CardHeader, CardBody, CardText, Form, FormGroup, Label, Input, Button } from 'reactstrap'\n\nconst RepeatingForm = () => {\n  const [count, setCount] = useState(1)\n\n  const increaseCount = () => {\n    setCount(count + 1)\n  }\n\n  const deleteForm = e => {\n    e.preventDefault()\n    const slideDownWrapper = e.target.closest('.react-slidedown'),\n      form = e.target.closest('form')\n    if (slideDownWrapper) {\n      slideDownWrapper.remove()\n    } else {\n      form.remove()\n    }\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <h4 className='card-title'>With Animation</h4>\n      </CardHeader>\n      <CardBody>\n        <CardText>\n          Use we're using <code>react-slidedown</code> component for slidedown animation. Refer this{' '}\n          <a href='https://github.com/frankwallis/react-slidedown' target='_blank' rel='noopener noreferrer'>\n            link\n          </a>{' '}\n          for more info.\n        </CardText>\n        <Repeater count={count}>\n          {i => {\n            const Tag = i === 0 ? 'div' : SlideDown\n            return (\n              <Tag key={i}>\n                <Form>\n                  <Row className='justify-content-between align-items-center'>\n                    <Col md={4}>\n                      <FormGroup>\n                        <Label for={`animation-item-name-${i}`}>Item Name</Label>\n                        <Input type='text' id={`animation-item-name-${i}`} placeholder='Vuexy Admin Template' />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <FormGroup>\n                        <Label for={`animation-cost-${i}`}>Cost</Label>\n                        <Input type='number' id={`animation-cost-${i}`} placeholder='32' />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <FormGroup>\n                        <Label for={`animation-quantity-${i}`}>Quantity</Label>\n                        <Input type='number' id={`animation-quantity-${i}`} placeholder='1' />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <FormGroup>\n                        <Label for={`animation-price-${i}`}>Price</Label>\n                        <input\n                          className='form-control-plaintext'\n                          type='number'\n                          id={`animation-price-${i}`}\n                          value='$32'\n                          placeholder='$32'\n                          readOnly\n                          disabled\n                        />\n                      </FormGroup>\n                    </Col>\n                    <Col md={2}>\n                      <Button.Ripple color='danger' className='text-nowrap px-1' onClick={deleteForm} outline>\n                        <X size={14} className='mr-50' />\n                        <span>Delete</span>\n                      </Button.Ripple>\n                    </Col>\n                    <Col sm={12}>\n                      <hr />\n                    </Col>\n                  </Row>\n                </Form>\n              </Tag>\n            )\n          }}\n        </Repeater>\n        <Button.Ripple className='btn-icon' color='primary' onClick={increaseCount}>\n          <Plus size={14} />\n          <span className='align-middle ml-25'>Add New</span>\n        </Button.Ripple>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RepeatingForm\n","import { Fragment } from 'react'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport { Row, Col } from 'reactstrap'\nimport RepeatingForm from './RepeatingForm'\nimport RepeatingFormAnimated from './RepeatingFormAnimated'\n\nimport 'react-slidedown/lib/slidedown.css'\nconst FormRepeater = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Form Repeater' breadCrumbParent='Form' breadCrumbActive='Form Repeater' />\n      <Row>\n        <Col sm={12}>\n          <RepeatingForm />\n        </Col>\n        <Col sm={12}>\n          <RepeatingFormAnimated />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default FormRepeater\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\nconst Repeater = props => {\n  // ** Props\n  const { count, tag, component, children, ...rest } = props\n\n  // ** Custom Tag\n  const Tag = tag\n\n  // ** Default Items\n  const items = []\n\n  // ** Loop passed count times and push it in items Array\n  for (let i = 0; i < count; i++) {\n    items.push(children(i))\n  }\n\n  return <Tag {...rest}>{items}</Tag>\n}\n\n// ** PropTypes\nRepeater.propTypes = {\n  count: PropTypes.number.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n// ** Default Props\nRepeater.defaultProps = {\n  tag: 'div'\n}\n\nexport default Repeater\n"],"sourceRoot":""}
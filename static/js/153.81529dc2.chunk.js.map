{"version":3,"sources":["views/extensions/sweet-alert/SweetAlertBasic.js","views/extensions/sweet-alert/SweetAlertPositions.js","views/extensions/sweet-alert/SweetAlertAnimations.js","views/extensions/sweet-alert/SweetAlertTypes.js","views/extensions/sweet-alert/SweetAlertOptions.js","views/extensions/sweet-alert/SweetAlertCallback.js","views/extensions/sweet-alert/index.js","@core/components/extensions-header/index.js"],"names":["MySwal","withReactContent","Swal","BasicSweetAlert","_jsxs","Card","children","_jsx","CardHeader","CardTitle","tag","CardBody","CardText","className","Button","color","onClick","fire","title","customClass","confirmButton","buttonsStyling","outline","text","icon","footer","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","ThumbsUp","size","cancelButtonText","ThumbsDown","cancelButton","SweetAlertPositions","position","showConfirmButton","timer","AnimatedSweetAlert","showClass","popup","SweetAlertTypes","SweetAlertOptions","imageUrl","alertImg","imageWidth","imageHeight","imageAlt","timerInterval","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","getTimerLeft","onClose","clearInterval","then","result","dismiss","DismissReason","console","log","allowOutsideClick","mixin","input","progressSteps","queue","value","concat","JSON","stringify","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","avatar_url","BasicSweetCallback","Row","Col","md","sm","cancel","SweetAlert","Fragment","ExtensionsHeader","subTitle","link","SweetAlertBasic","SweetAlertAnimations","SweetAlertCallback","props","href","target","rel"],"mappings":"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","file":"static/js/153.81529dc2.chunk.js","sourcesContent":["import Swal from 'sweetalert2'\nimport { ThumbsUp, ThumbsDown } from 'react-feather'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\n\nconst MySwal = withReactContent(Swal)\n\nconst BasicSweetAlert = () => {\n  const handleBasicTitleAlert = () => {\n    return MySwal.fire({\n      title: 'Any fool can use a computer',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTitleAlert = () => {\n    return MySwal.fire({\n      title: 'The Internet?,',\n      text: 'That thing is still around?',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleFooterAlert = () => {\n    return MySwal.fire({\n      icon: 'error',\n      title: 'Oops...',\n      text: 'Something went wrong!',\n      footer: '<a href=\"javascript:void(0);\">Why do I have this issue?</a>',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleHTMLAlert = () => {\n    return MySwal.fire({\n      title: '<strong>HTML <u>example</u></strong>',\n      icon: 'info',\n      html:\n        'You can use <b>bold text</b>, ' +\n        '<a href=\"https://pixinvent.com/\" target=\"_blank\">links</a> ' +\n        'and other HTML tags',\n      showCloseButton: true,\n      showCancelButton: true,\n      focusConfirm: false,\n      confirmButtonText: (\n        <span className='align-middle'>\n          <ThumbsUp className='mr-50' size={15} />\n          <span className='align-middle'>Great!</span>\n        </span>\n      ),\n      cancelButtonText: <ThumbsDown size={15} />,\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Basic</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          SweetAlert automatically centers itself on the page and looks great no matter if you're using a desktop\n          computer, mobile or tablet. It's even highly customizable, as you can see below!\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleBasicTitleAlert} outline>\n            Basic\n          </Button>\n          <Button color='primary' onClick={handleTitleAlert} outline>\n            With Title\n          </Button>\n          <Button color='primary' onClick={handleFooterAlert} outline>\n            With Footer\n          </Button>\n          <Button color='primary' onClick={handleHTMLAlert} outline>\n            HTML\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default BasicSweetAlert\n","import { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertPositions = () => {\n  const handleTopStart = () => {\n    return MySwal.fire({\n      position: 'top-start',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  const handleTopEnd = () => {\n    return MySwal.fire({\n      position: 'top-end',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  const handleBottomStart = () => {\n    return MySwal.fire({\n      position: 'bottom-start',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  const handleBottomEnd = () => {\n    return MySwal.fire({\n      position: 'bottom-end',\n      icon: 'success',\n      title: 'Your work has been saved',\n      showConfirmButton: false,\n      timer: 1500\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Position</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          You can specify position of your alert with\n          <code>{'position : top-start | top-end | bottom-start | bottom-end '}</code>{' '}\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleTopStart} outline>\n            Top Start\n          </Button>\n\n          <Button color='primary' onClick={handleTopEnd} outline>\n            Top End\n          </Button>\n\n          <Button color='primary' onClick={handleBottomStart} outline>\n            Bottom Start\n          </Button>\n\n          <Button color='primary' onClick={handleBottomEnd} outline>\n            Bottom End\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertPositions\n","import Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\n\nconst MySwal = withReactContent(Swal)\n\nconst AnimatedSweetAlert = () => {\n  const handleBounceIn = () => {\n    return MySwal.fire({\n      title: 'Bounce In Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__bounceIn'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleFadeIn = () => {\n    return MySwal.fire({\n      title: 'Fade In Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__fadeIn'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleFlipIn = () => {\n    return MySwal.fire({\n      title: 'Flip In Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__flipInX'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTada = () => {\n    return MySwal.fire({\n      title: 'Tada Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__tada'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleShake = () => {\n    return MySwal.fire({\n      title: 'Shake Animation',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      showClass: {\n        popup: 'animate__animated animate__shakeX'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Animations</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          Use <code>popup</code> inside <code>showClass</code> parameter to add animation to your alert.\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleBounceIn} outline>\n            Bounce In\n          </Button>\n          <Button color='primary' onClick={handleFadeIn} outline>\n            Fade In\n          </Button>\n          <Button color='primary' onClick={handleFlipIn} outline>\n            Flip In\n          </Button>\n          <Button color='primary' onClick={handleTada} outline>\n            Tada\n          </Button>\n          <Button color='primary' onClick={handleShake} outline>\n            Shake\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default AnimatedSweetAlert\n","import { Card, CardHeader, CardBody, CardTitle, Button, CardText } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertTypes = () => {\n  const handleSuccess = () => {\n    return MySwal.fire({\n      title: 'Good job!',\n      text: 'You clicked the button!',\n      icon: 'success',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleInfo = () => {\n    return MySwal.fire({\n      title: 'Info!',\n      text: 'You clicked the button!',\n      icon: 'info',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleWarning = () => {\n    return MySwal.fire({\n      title: 'Warning!',\n      text: ' You clicked the button!',\n      icon: 'warning',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  const handleError = () => {\n    return MySwal.fire({\n      title: 'Error!',\n      text: ' You clicked the button!',\n      icon: 'error',\n      customClass: {\n        confirmButton: 'btn btn-primary'\n      },\n      buttonsStyling: false\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Types</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <CardText className='mb-0'>\n          SweetAlert comes with 4 built-in types which will show a corresponding icon animation: \"warning\", \"error\",\n          \"success\" and \"info\".\n        </CardText>\n        <div className='demo-inline-spacing'>\n          <Button color='success' onClick={handleSuccess} outline>\n            Success\n          </Button>\n          <Button color='danger' onClick={handleError} outline>\n            Error\n          </Button>\n          <Button color='warning' onClick={handleWarning} outline>\n            Warning\n          </Button>\n          <Button color='info' onClick={handleInfo} outline>\n            Info\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertTypes\n","import { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\nimport alertImg from '@src/assets/images/slider/04.jpg'\n\nconst MySwal = withReactContent(Swal)\n\nconst SweetAlertOptions = () => {\n  const handleImageAlert = () => {\n    return MySwal.fire({\n      title: 'Sweet!',\n      text: 'Modal with a custom image.',\n      imageUrl: alertImg,\n      imageWidth: 400,\n      imageHeight: 200,\n      imageAlt: 'Custom image',\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleTimeoutAlert = () => {\n    let timerInterval\n    Swal.fire({\n      title: 'Auto close alert!',\n      html: 'I will close in <strong></strong> seconds.',\n      timer: 2000,\n      onBeforeOpen() {\n        Swal.showLoading()\n        timerInterval = setInterval(function () {\n          Swal.getContent().querySelector('strong').textContent = Swal.getTimerLeft()\n        }, 100)\n      },\n      onClose() {\n        clearInterval(timerInterval)\n      }\n    }).then(function (result) {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log('I was closed by the timer')\n      }\n    })\n  }\n\n  const handleClickOutside = () => {\n    return MySwal.fire({\n      title: 'Click outside to close!',\n      text: 'This is a cool message!',\n      allowOutsideClick: true,\n      customClass: { confirmButton: 'btn btn-primary' },\n      buttonsStyling: false\n    })\n  }\n\n  const handleQuestions = () => {\n    return MySwal.mixin({\n      input: 'text',\n      confirmButtonText: 'Next &rarr;',\n      showCancelButton: true,\n      progressSteps: ['1', '2', '3'],\n      buttonsStyling: false,\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      }\n    })\n      .queue(['Question 1', 'Question 2', 'Question 3'])\n      .then(function (result) {\n        if (result.value) {\n          MySwal.fire({\n            title: 'All done!',\n            html: `Your answers: <pre><code>${JSON.stringify(result.value)}</code></pre>`,\n            confirmButtonText: 'Lovely!',\n            customClass: { confirmButton: 'btn btn-primary' }\n          })\n        }\n      })\n  }\n\n  const handleAjax = () => {\n    MySwal.fire({\n      title: 'Search for a user',\n      input: 'text',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      },\n      buttonsStyling: false,\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Look up',\n      showLoaderOnConfirm: true,\n      preConfirm(login) {\n        return fetch(`//api.github.com/users/${login}`)\n          .then(function (response) {\n            if (!response.ok) {\n              throw new Error(response.statusText)\n            }\n            return response.json()\n          })\n          .catch(function (error) {\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\n          })\n      }\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          title: `${result.value.login}'s avatar`,\n          imageUrl: result.value.avatar_url,\n          customClass: {\n            confirmButton: 'btn btn-primary'\n          }\n        })\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Options</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <div className='demo-inline-spacing'>\n          <Button color='primary' onClick={handleImageAlert} outline>\n            Image\n          </Button>\n          <Button color='primary' onClick={handleTimeoutAlert} outline>\n            Timeout\n          </Button>\n          <Button color='primary' onClick={handleClickOutside} outline>\n            Click Outside\n          </Button>\n          <Button color='primary' onClick={handleQuestions} outline>\n            Question\n          </Button>\n          <Button color='primary' onClick={handleAjax} outline>\n            Ajax\n          </Button>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default SweetAlertOptions\n","import { Card, CardHeader, CardBody, CardTitle, Button, Row, Col } from 'reactstrap'\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nconst MySwal = withReactContent(Swal)\n\nconst BasicSweetCallback = () => {\n  const handleConfirmText = () => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-outline-danger ml-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Your file has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  const handleConfirmCancel = () => {\n    return MySwal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      customClass: {\n        confirmButton: 'btn btn-primary',\n        cancelButton: 'btn btn-danger ml-1'\n      },\n      buttonsStyling: false\n    }).then(function (result) {\n      if (result.value) {\n        MySwal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: 'Your file has been deleted.',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\n        MySwal.fire({\n          title: 'Cancelled',\n          text: 'Your imaginary file is safe :)',\n          icon: 'error',\n          customClass: {\n            confirmButton: 'btn btn-success'\n          }\n        })\n      }\n    })\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Callback</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col className='mb-2 mb-md-0' md='6' sm='12'>\n            <h5 className='mb-1'>Confirm Button Text</h5>\n            <Button color='primary' onClick={handleConfirmText} outline>\n              Confirm Text\n            </Button>\n          </Col>\n\n          <Col md='6' sm='12'>\n            <h5 className='mb-1'>Confirm Button Color</h5>\n            <Button color='primary' onClick={handleConfirmCancel} outline>\n              Confirm & cancel\n            </Button>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default BasicSweetCallback\n","import { Fragment } from 'react'\nimport ExtensionsHeader from '@components/extensions-header'\nimport { Row, Col } from 'reactstrap'\nimport SweetAlertBasic from './SweetAlertBasic'\nimport SweetAlertPositions from './SweetAlertPositions'\nimport SweetAlertAnimations from './SweetAlertAnimations'\nimport SweetAlertTypes from './SweetAlertTypes'\nimport SweetAlertOptions from './SweetAlertOptions'\nimport SweetAlertCallback from './SweetAlertCallback'\n\nimport 'animate.css/animate.css'\nimport '@styles/base/plugins/extensions/ext-component-sweet-alerts.scss'\n\nconst SweetAlert = () => {\n  return (\n    <Fragment>\n      <ExtensionsHeader\n        title='Sweet Alerts2'\n        subTitle='A React implementation of SweetAlert2'\n        link='https://github.com/sweetalert2/sweetalert2-react-content'\n      />\n      <Row>\n        <Col sm='12'>\n          <SweetAlertBasic />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertPositions />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertAnimations />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertTypes />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertOptions />\n        </Col>\n        <Col sm='12'>\n          <SweetAlertCallback />\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default SweetAlert\n","// ** React Imports\nimport Proptypes from 'prop-types'\nimport { Row, Col } from 'reactstrap'\n\nconst ExtensionsHeader = props => {\n  return (\n    <Row className='mb-2'>\n      <Col sm='12' className='ml-50'>\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\n          {props.title}\n        </p>\n        {props.link ? (\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\n            {props.subTitle}\n          </a>\n        ) : (\n          <p className='text-primary'>{props.subTitle}</p>\n        )}\n      </Col>\n    </Row>\n  )\n}\nexport default ExtensionsHeader\n\n// ** PropTypes\nExtensionsHeader.propTypes = {\n  title: Proptypes.string.isRequired,\n  subTitle: Proptypes.string.isRequired,\n  link: Proptypes.string\n}\n"],"sourceRoot":""}